# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ChannelConfig.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ChannelConfig.proto',
  package='pigatron',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x13\x43hannelConfig.proto\x12\x08pigatron\"Q\n\x0e\x43hannelMapping\x12\x13\n\x0bmidiChannel\x18\x01 \x02(\x05\x12\x15\n\rcvChannelFrom\x18\x02 \x02(\x05\x12\x13\n\x0b\x63vChannelTo\x18\x03 \x02(\x05\"A\n\rChannelConfig\x12\x30\n\x0e\x63hannelMapping\x18\x01 \x03(\x0b\x32\x18.pigatron.ChannelMapping')
)




_CHANNELMAPPING = _descriptor.Descriptor(
  name='ChannelMapping',
  full_name='pigatron.ChannelMapping',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='midiChannel', full_name='pigatron.ChannelMapping.midiChannel', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cvChannelFrom', full_name='pigatron.ChannelMapping.cvChannelFrom', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cvChannelTo', full_name='pigatron.ChannelMapping.cvChannelTo', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=114,
)


_CHANNELCONFIG = _descriptor.Descriptor(
  name='ChannelConfig',
  full_name='pigatron.ChannelConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channelMapping', full_name='pigatron.ChannelConfig.channelMapping', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=181,
)

_CHANNELCONFIG.fields_by_name['channelMapping'].message_type = _CHANNELMAPPING
DESCRIPTOR.message_types_by_name['ChannelMapping'] = _CHANNELMAPPING
DESCRIPTOR.message_types_by_name['ChannelConfig'] = _CHANNELCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ChannelMapping = _reflection.GeneratedProtocolMessageType('ChannelMapping', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELMAPPING,
  '__module__' : 'ChannelConfig_pb2'
  # @@protoc_insertion_point(class_scope:pigatron.ChannelMapping)
  })
_sym_db.RegisterMessage(ChannelMapping)

ChannelConfig = _reflection.GeneratedProtocolMessageType('ChannelConfig', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELCONFIG,
  '__module__' : 'ChannelConfig_pb2'
  # @@protoc_insertion_point(class_scope:pigatron.ChannelConfig)
  })
_sym_db.RegisterMessage(ChannelConfig)


# @@protoc_insertion_point(module_scope)
